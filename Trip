/*
 * Author: Jessica C and Jamie D
 * Date: 5.29.18
 * Program: Time
 */
/*
 * Author: Jessica C and Jamie D
 * Date: 5.29.18
 * Program: Time
 */
/*
 * Author: Jessica C and Jamie D
 * Date: 5.29.18
 * Program: Time
 */
/*
 * Author: Jessica C and Jamie D
 * Date: 5.29.18
 * Program: Trip
 */

import java.util.*;
public class Trip
{
  private ArrayList<Flight> flights = new ArrayList<Flight>();
  
  //constructor
  public Trip(ArrayList<Flight> fltts)
  {
      for(Flight flight: fltts)
      addFlight(flight);
  }
  //adds a flight to list
  public void addFlight(Flight flight)
  {
      if(flights.isEmpty())
      flights.add(flight);
      else
      {
          for(int i = 0; i < flights.size();i++)
          {
              if(flight.getDepartureTime().getHour()==flights.get(i).getDepartureTime().getHour())
              {
                  if((flight.getDepartureTime().getMin()<=flights.get(i).getDepartureTime().getMin()))
                  { 
                      flights.add(i, flight);
                      return;
                    }
                }
                else if(flight.getDepartureTime().getHour()<flights.get(i).getDepartureTime().getHour())
                {
                    flights.add(i, flight);
                    return;
                }
            }
          flights.add(flight);
      }
  }
  //returns the duration of whole trip
  public int getDuration()
  {
    if(flights.size() ==  0)
      return 0;
    else
    {
      Time start  = flights.get(0).getDepartureTime();
      Time end = flights.get(flights.size()-1).getArrivalTime();
      return start.minutesUntil(end);
    }
  }
  //returns theshortest layover between flights
  public int getShortestLayover()
  {
    if(flights.size() < 2)
      return -1;
    else
    {
      int shortest = getDuration();
      for(int i = 0; i < flights.size()-1; i++)
      {
        Time arrive = flights.get(i).getArrivalTime();
        Time leave = flights.get(i+1).getDepartureTime();
        int layover = arrive.minutesUntil(leave);
        if(layover < shortest)
          shortest = layover;
      }
      return shortest;
    }
  }
}
